<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--启用注解功能-->
    <context:annotation-config/>
    <context:component-scan base-package="cn.zmlio">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--允许使用配置文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:datasource.properties</value>
            </list>
        </property>
    </bean>
    <!--数据源-->
    <!--
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">

            <property name="username" value="${zmlio.datasource.db.username}"/>

            <property name="url" value="${zmlio.datasource.db.url}"/>

            <property name="driverClassName" value="${zmlio.datasource.db.drivername}"/>

            <property name="password" value="${zmlio.datasource.db.password}"/>

            <property name="initialSize" value="3"/>

            <property name="filters" value="stat,log4j,wall"/>

        </bean>
    -->

    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
        <property name="jdbcUrl" value="${zmlio.datasource.db.url}"/>
        <property name="password" value="${zmlio.datasource.db.password}"/>
        <property name="driverClass" value="${zmlio.datasource.db.drivername}"/>
        <property name="user" value="${zmlio.datasource.db.username}"/>
    </bean>


    <!--会化工厂-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          lazy-init="true">
        <property name="packagesToScan" value="cn.zmlio.model"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">

            <map>
                <entry key="hibernate.cache.provider_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>
                <entry key="hibernate.cache.region.factory_class"
                       value="org.hibernate.cache.SingletonEhCacheRegionFactory"/>
                <entry key="hibernate.cache.use_second_level_cache" value="true"/>
                <entry key="hibernate.cache.use_query_cache" value="true"/>
                <entry key="hibernate.show_sql" value="true"></entry>
                <entry key="hibernate.hbm2ddl.auto" value="update"/>
                <entry key="hibernate.format_sql" value="true"/>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect"/>
                <entry key="hibernate.enable_lazy_load_no_trans" value="true"></entry>
                <!--<entry key="hibernate.multiTenancy" value="DATABASE"/> -->
                <!--<entry key="hibernate.tenant_identifier_resolver" value="com.qtong.healthcare.ahx.dao.TenantIdResolver"/> -->
                <!--<entry key="hibernate.multi_tenant_connection_provider" value="com.qtong.healthcare.ahx.dao.SchemaBasedMultiTenantConnectionProvider"/> -->
            </map>

        </property>
    </bean>
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="cacheQueries" value="true"/>
    </bean>
    <tx:advice transaction-manager="transactionManager" id="txadvice">
        <tx:attributes>
            <tx:method name="do*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <!-- <tx:method name="*" read-only="true"/> -->
        </tx:attributes>
    </tx:advice>
    <!--事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>
    <!--缓存管理，使用的是EHCACHE -->
    <bean id="ehCacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
        <property name="shared" value="true"/>
    </bean>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>
    <aop:config proxy-target-class="true">
        <aop:pointcut id="methodExecution" expression="execution(* cn.zmlio.service..*(..))"/>
        <!--对所有的方法进行监控-->
        <aop:advisor advice-ref="txadvice" pointcut-ref="methodExecution"/>
    </aop:config>
    <import resource="security.xml"/>
</beans>